version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "${APP_PORT:-8000}:8000"
    environment:
      - APP_ENV=production
      - APP_DEBUG=true
      - APP_KEY=${APP_KEY:-}
      - SSR_URL=app
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE:-laravel}
      - DB_USERNAME=${DB_USERNAME:-laravel}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_PORT=6379
    volumes:
      - storage:/var/www/html/storage/app
      - logs:/var/www/html/storage/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: supabase/postgres:15.8.1.131
    environment:
      - POSTGRES_DB=${DB_DATABASE:-laravel}
      - POSTGRES_USER=${DB_USERNAME:-laravel}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD:-}"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:
  storage:
  logs:

networks:
  app-network:
    driver: bridge
